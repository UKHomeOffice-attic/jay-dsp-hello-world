eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIG15LWJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IG15aGVsbG93b3JsZCAuCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogcHVzaAoKICBpbWFnZV90b19xdWF5OgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDogCiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vbG9jYWxob3N0OjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0iamF5bnFhYyIgLXA9JHtET0NLRVJfUEFTU1dPUkR9IHF1YXkuaW8KICAgICAgLSBkb2NrZXIgdGFnIG15aGVsbG93b3JsZCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvbXloZWxsb3dvcmxkOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvbXloZWxsb3dvcmxkOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCgogIHByZWRlcGxveV90b191YXQ6CiAgICBpbWFnZTogcGx1Z2lucy9naXQKICAgIGNvbW1hbmRzOgogICAgICAtIGdpdCBjbG9uZSBodHRwczovLyR7R0lUSFVCX1RPS0VOfTp4LW9hdXRoLWJhc2ljQGdpdGh1Yi5jb20vVUtIb21lT2ZmaWNlL2pheS1kc3AtaGVsbG8td29ybGQuZ2l0CiAgICB3aGVuOgogICAgICBlbnZpcm9ubWVudDogdWF0CiAgICAgIGV2ZW50OiBkZXBsb3ltZW50ICAgIAoKICBkZXBsb3lfdG9fdWF0OgogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9rZDp2MC4yLjMKICAgIGVudmlyb25tZW50OgogICAgICAtIEtVQkVfTkFNRVNQQUNFPTxkZXYtaW5kdWN0aW9uPgogICAgY29tbWFuZHM6CiAgICAgIC0gY2QgPGt1YmUtbm9kZS1oZWxsby13b3JsZD4KICAgICAgLSAuL2RlcGxveS5zaAogICAgd2hlbjoKICAgICAgZW52aXJvbm1lbnQ6IHVhdAogICAgICBldmVudDogZGVwbG95bWVudAoKc2VydmljZXM6CiAgZGluZDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMS1kaW5kCiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBjb21tYW5kOgogICAgICAtICItcyIKICAgICAgLSAib3ZlcmxheSIK.Bl6sDdITZE0em2IoCcD24CFmWUobHk83yWHbz9SWWt4